.grid_background {
  background-image: url('/images/bg-main-mobile.png');
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
}

.card {
  $card-margin: 15px;

  position: absolute;
  width: 285px;
  height: 155px;
  border-radius: 5px;

  color: white;

  background-size: cover;
  background-position: center;

  box-shadow: 20px 20px 30px rgba($color: #000000, $alpha: 0.12);

  &--front {
    left: $card-margin;
    top: 125px;
    z-index: 2;
    padding: 1rem;

    background-image: url('/public/images/bg-card-front.png');
  }

  &--back {
    right: $card-margin;
    top: 2 * $card-margin;
    z-index: 1;

    background-image: url('/public/images/bg-card-back.png');
  }

  font-size: var(--fs-200);
  letter-spacing: 1px;
  color: rgba($color: $White, $alpha: 0.8);

  // positioning card elements
  &_logo {
    width: 55px;
  }

  &_number {
    margin-top: 35px;
    letter-spacing: 2.5px;
    font-size: var(--fs-500);
  }

  &_info {
    justify-content: space-between;
    margin-top: 10px;
  }

  &_cardholder {
    text-transform: uppercase;
  }

  &_cvc {
    position: absolute;
    top: 70px;
    right: 35px;
  }
}

.input {
  // input group (label and input)
  &-group {
    display: flex;
    flex-direction: column;
    margin-bottom: 1rem;
    width: 100%;

    label {
      margin-bottom: 5px;
      font-size: var(--fs-300);
      text-transform: uppercase;
      letter-spacing: 2px;
      text-shadow: 0 0 1px rgba($color: #000000, $alpha: 0.4);
    }

    input {
      position: absolute;
      width: calc(100% - 2px);
      height: calc(100% - 2px);
      padding: 0 15px;
      border: 1px solid $Light-grayish-violet;
      border-radius: $border-radius;
      inset: 1px;

      z-index: 3;

      &::placeholder {
        color: $Light-grayish-violet;
      }
    }
  }

  // border around input field
  &_container {
    position: relative;
    height: 45px;
    width: 100%;
    background-color: transparent;
    border: none;
    outline: none;

    input:is(:focus, :active) {
      border-color: transparent;
      outline: none;

      & + .input_border {
        display: block;
      }
    }

    // show border and message on error
    &.error {
      .input_border {
        display: block;
        background: $Red;
      }
      .error-msg {
        display: block;
      }
    }

    // show message for month and day
    // two inputs share one span for msg
    &.error ~ .error-msg {
      display: block;
    }
  }

  &_border {
    display: none;
    position: absolute;
    border-radius: $border-radius;
    inset: 0;
    z-index: 2;
    background: var(--l-gradient);
  }
}

.error-msg {
  display: none;

  position: absolute;
  width: 300px;
  left: 0;
  bottom: -1rem;

  font-size: var(--fs-300);
  color: $Red;
}

form {
  .flex {
    gap: 10px;
    align-items: center;
  }
}

.complete-state {
  display: none;

  text-align: center;
  color: $Very-dark-violet;

  img {
    margin-top: 0.5rem;
    margin-inline: auto;
  }

  p:first-of-type {
    margin: 1.5rem 0 0.5rem;
    font-size: var(--fs-600);
    letter-spacing: 3px;
    text-transform: uppercase;
  }

  p:last-of-type {
    margin-bottom: 2rem;
    color: $Dark-grayish-violet;
  }
}

.btn {
  width: 100%;
  margin-top: 0.5rem;
  padding: 0.5rem;
  border-radius: 8px;

  color: $Light-grayish-violet;
  background-color: $Very-dark-violet;

  cursor: pointer;

  &:is(:hover, :focus) {
    opacity: 0.92;
  }
}

.attribution {
  font-size: 11px;
  text-align: center;

  a {
    color: hsl(228, 45%, 44%);
  }
}
